# Create a Docker volume for PostgreSQL data persistence
postgres-volume:
	sudo docker volume create postgres-volume

# Run a PostgreSQL container with the specified name, port, volume, and environment variables
postgres:
	sudo docker run --name postgres_tose_backend -p 5432:5432 -v postgres-volume:/var/lib/postgresql/data -e POSTGRES_USER=root -e POSTGRES_PASSWORD=secret -d postgres:12-alpine

# Create a database named 'tose_backend' with specified username and owner
createdb:
	sudo docker exec -it postgres_tose_backend createdb --username=root --owner=root tose_backend

# Drop the 'tose_backend' database
dropdb:
	sudo docker exec -it postgres_tose_backend dropdb tose_backend

# Initialize a new Alembic directory with a configuration file and a script directory
alembic-init:
	alembic init alembic tose_backend # This command seems incorrect. It should probably just be `alembic init alembic`

# Create a new Alembic revision with autogenerated migration script from model changes
alembic-revision:
	alembic revision --autogenerate -m "Add new changes"

# Upgrade the database to the latest revision
alembic-upgrade:
	alembic upgrade head

# Downgrade the database to the base (initial) revision
alembic-downgrade:
	alembic downgrade base

# Downgrade the database by one revision
alembic-downgrade-1:
	alembic downgrade -1

# Upgrade the database by one revision
alembic-upgrade-1:
	alembic upgrade +1

# Fill the 'users' table with test data
fill-users:
	python3 ./test/fill_with_users.py

# Fill the 'address' table with test data
fill-adress: # Note: There's a typo here. It should be `fill-address`.
	python3 ./test/fill_with_address.py

# Fill the 'tarif' (tariff) table with test data
fill-tarif:
	python3 ./test/fill_with_tarifs.py

# Fill the 'price' table with test data
fill-price:
	python3 ./test/fill_with_prices.py

# Create a Docker network named 'tose_network'
docker-network:
	sudo docker network create tose_network

# Start the 'postgres_tose_backend' container
start-postgres:
	sudo docker start postgres_tose_backend

# Create a Docker volume for Alembic data persistence
alembic-volume:
	sudo docker volume create alembic-volume

# Open a bash shell in the 'fastapi-backend' container
inspect-backend:
	sudo docker exec -it fastapi-backend bash

# View the logs of the 'fastapi-backend' container
log-backend:
	sudo docker logs fastapi-backend

# Inspect the contents of the 'alembic-volume'
inspect-alembic-volume:
	sudo docker run --rm -i -v=alembic-volume:/tmp/myvolume busybox find /tmp/myvolume

# clean not used containers, volumes and images
docker-clean:
	sudo docker system prune

# get ip address of the database container
get-ip-postgres:
	sudo docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' postgres_tose_backend
