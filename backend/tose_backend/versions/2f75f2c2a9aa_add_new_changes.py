"""Add new changes

Revision ID: 2f75f2c2a9aa
Revises: 328990cadc49
Create Date: 2023-12-14 15:28:17.842456

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2f75f2c2a9aa'
down_revision: Union[str, None] = '328990cadc49'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Netzbetreiber')
    op.drop_table('Adresse')
    op.drop_table('Nutzer')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Nutzer',
    sa.Column('user_id', sa.INTEGER(), server_default=sa.text('nextval(\'"Nutzer_user_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('nachname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('vorname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('geburtsdatum', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('passwort', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('rolle', postgresql.ENUM('Haushalte', 'Solarteure', 'Energieberatende', 'Netzbetreiber', 'Admin', name='rolle'), autoincrement=False, nullable=True),
    sa.Column('passwort_reset_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('token_expiry', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('telefonnummer', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('adresse_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['adresse_id'], ['Adresse.adresse_id'], name='Nutzer_adresse_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', name='Nutzer_pkey')
    )
    op.create_table('Adresse',
    sa.Column('adresse_id', sa.INTEGER(), server_default=sa.text('nextval(\'"Adresse_adresse_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('strasse', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hausnummer', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('zusatz', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('plz', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stadt', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('land', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('adresse_id', name='Adresse_pkey')
    )
    op.create_table('Netzbetreiber',
    sa.Column('user_id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('user_id', name='Netzbetreiber_pkey')
    )
    # ### end Alembic commands ###
